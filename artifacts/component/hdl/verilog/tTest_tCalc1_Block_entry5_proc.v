// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module tTest_tCalc1_Block_entry5_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        numData,
        varSum,
        out_r,
        out_r_ap_vld
);

parameter    ap_ST_fsm_state1 = 136'd1;
parameter    ap_ST_fsm_state2 = 136'd2;
parameter    ap_ST_fsm_state3 = 136'd4;
parameter    ap_ST_fsm_state4 = 136'd8;
parameter    ap_ST_fsm_state5 = 136'd16;
parameter    ap_ST_fsm_state6 = 136'd32;
parameter    ap_ST_fsm_state7 = 136'd64;
parameter    ap_ST_fsm_state8 = 136'd128;
parameter    ap_ST_fsm_state9 = 136'd256;
parameter    ap_ST_fsm_state10 = 136'd512;
parameter    ap_ST_fsm_state11 = 136'd1024;
parameter    ap_ST_fsm_state12 = 136'd2048;
parameter    ap_ST_fsm_state13 = 136'd4096;
parameter    ap_ST_fsm_state14 = 136'd8192;
parameter    ap_ST_fsm_state15 = 136'd16384;
parameter    ap_ST_fsm_state16 = 136'd32768;
parameter    ap_ST_fsm_state17 = 136'd65536;
parameter    ap_ST_fsm_state18 = 136'd131072;
parameter    ap_ST_fsm_state19 = 136'd262144;
parameter    ap_ST_fsm_state20 = 136'd524288;
parameter    ap_ST_fsm_state21 = 136'd1048576;
parameter    ap_ST_fsm_state22 = 136'd2097152;
parameter    ap_ST_fsm_state23 = 136'd4194304;
parameter    ap_ST_fsm_state24 = 136'd8388608;
parameter    ap_ST_fsm_state25 = 136'd16777216;
parameter    ap_ST_fsm_state26 = 136'd33554432;
parameter    ap_ST_fsm_state27 = 136'd67108864;
parameter    ap_ST_fsm_state28 = 136'd134217728;
parameter    ap_ST_fsm_state29 = 136'd268435456;
parameter    ap_ST_fsm_state30 = 136'd536870912;
parameter    ap_ST_fsm_state31 = 136'd1073741824;
parameter    ap_ST_fsm_state32 = 136'd2147483648;
parameter    ap_ST_fsm_state33 = 136'd4294967296;
parameter    ap_ST_fsm_state34 = 136'd8589934592;
parameter    ap_ST_fsm_state35 = 136'd17179869184;
parameter    ap_ST_fsm_state36 = 136'd34359738368;
parameter    ap_ST_fsm_state37 = 136'd68719476736;
parameter    ap_ST_fsm_state38 = 136'd137438953472;
parameter    ap_ST_fsm_state39 = 136'd274877906944;
parameter    ap_ST_fsm_state40 = 136'd549755813888;
parameter    ap_ST_fsm_state41 = 136'd1099511627776;
parameter    ap_ST_fsm_state42 = 136'd2199023255552;
parameter    ap_ST_fsm_state43 = 136'd4398046511104;
parameter    ap_ST_fsm_state44 = 136'd8796093022208;
parameter    ap_ST_fsm_state45 = 136'd17592186044416;
parameter    ap_ST_fsm_state46 = 136'd35184372088832;
parameter    ap_ST_fsm_state47 = 136'd70368744177664;
parameter    ap_ST_fsm_state48 = 136'd140737488355328;
parameter    ap_ST_fsm_state49 = 136'd281474976710656;
parameter    ap_ST_fsm_state50 = 136'd562949953421312;
parameter    ap_ST_fsm_state51 = 136'd1125899906842624;
parameter    ap_ST_fsm_state52 = 136'd2251799813685248;
parameter    ap_ST_fsm_state53 = 136'd4503599627370496;
parameter    ap_ST_fsm_state54 = 136'd9007199254740992;
parameter    ap_ST_fsm_state55 = 136'd18014398509481984;
parameter    ap_ST_fsm_state56 = 136'd36028797018963968;
parameter    ap_ST_fsm_state57 = 136'd72057594037927936;
parameter    ap_ST_fsm_state58 = 136'd144115188075855872;
parameter    ap_ST_fsm_state59 = 136'd288230376151711744;
parameter    ap_ST_fsm_state60 = 136'd576460752303423488;
parameter    ap_ST_fsm_state61 = 136'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 136'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 136'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 136'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 136'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 136'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 136'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 136'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 136'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 136'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 136'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 136'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 136'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 136'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 136'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 136'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 136'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 136'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 136'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 136'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 136'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 136'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 136'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 136'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 136'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 136'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 136'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 136'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 136'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 136'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 136'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 136'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 136'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 136'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 136'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 136'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 136'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 136'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 136'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 136'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 136'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 136'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 136'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 136'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 136'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 136'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 136'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 136'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 136'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 136'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 136'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 136'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 136'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 136'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 136'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 136'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 136'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 136'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 136'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 136'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 136'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 136'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 136'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 136'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 136'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 136'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 136'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 136'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 136'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 136'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 136'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 136'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 136'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 136'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 136'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 136'd43556142965880123323311949751266331066368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [39:0] numData;
input  [62:0] varSum;
output  [63:0] out_r;
output   out_r_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] out_r;
reg out_r_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [135:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1;
wire   [39:0] add_ln48_fu_39_p2;
reg   [39:0] add_ln48_reg_86;
wire    ap_CS_fsm_state2;
wire   [30:0] grp_fu_48_p2;
reg   [30:0] udiv_ln48_reg_101;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire   [63:0] shl_ln49_fu_74_p2;
reg   [63:0] out_r_preg;
wire    ap_CS_fsm_state136;
wire   [39:0] grp_fu_48_p1;
wire   [30:0] trunc_ln48_fu_54_p1;
wire   [63:0] grp_fu_68_p0;
wire   [39:0] grp_fu_68_p1;
wire   [63:0] grp_fu_68_p2;
reg    grp_fu_48_ap_start;
wire    grp_fu_48_ap_done;
reg    grp_fu_68_ap_start;
wire    grp_fu_68_ap_done;
reg   [135:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
wire    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
wire    ap_ST_fsm_state134_blk;
wire    ap_ST_fsm_state135_blk;
wire    ap_ST_fsm_state136_blk;
wire   [62:0] grp_fu_48_p10;
wire   [63:0] grp_fu_68_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 136'd1;
#0 add_ln48_reg_86 = 40'd0;
#0 udiv_ln48_reg_101 = 31'd0;
#0 out_r_preg = 64'd0;
end

tTest_udiv_63ns_40ns_31_67_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 67 ),
    .din0_WIDTH( 63 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 31 ))
udiv_63ns_40ns_31_67_seq_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_48_ap_start),
    .done(grp_fu_48_ap_done),
    .din0(varSum),
    .din1(grp_fu_48_p1),
    .ce(1'b1),
    .dout(grp_fu_48_p2)
);

tTest_udiv_64ns_40ns_64_68_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 64 ))
udiv_64ns_40ns_64_68_seq_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_68_ap_start),
    .done(grp_fu_68_ap_done),
    .din0(grp_fu_68_p0),
    .din1(grp_fu_68_p1),
    .ce(1'b1),
    .dout(grp_fu_68_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        add_ln48_reg_86 <= 40'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
            add_ln48_reg_86 <= add_ln48_fu_39_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state136)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                out_r_preg[9] <= 1'b0;
        out_r_preg[10] <= 1'b0;
        out_r_preg[11] <= 1'b0;
        out_r_preg[12] <= 1'b0;
        out_r_preg[13] <= 1'b0;
        out_r_preg[14] <= 1'b0;
        out_r_preg[15] <= 1'b0;
        out_r_preg[16] <= 1'b0;
        out_r_preg[17] <= 1'b0;
        out_r_preg[18] <= 1'b0;
        out_r_preg[19] <= 1'b0;
        out_r_preg[20] <= 1'b0;
        out_r_preg[21] <= 1'b0;
        out_r_preg[22] <= 1'b0;
        out_r_preg[23] <= 1'b0;
        out_r_preg[24] <= 1'b0;
        out_r_preg[25] <= 1'b0;
        out_r_preg[26] <= 1'b0;
        out_r_preg[27] <= 1'b0;
        out_r_preg[28] <= 1'b0;
        out_r_preg[29] <= 1'b0;
        out_r_preg[30] <= 1'b0;
        out_r_preg[31] <= 1'b0;
        out_r_preg[32] <= 1'b0;
        out_r_preg[33] <= 1'b0;
        out_r_preg[34] <= 1'b0;
        out_r_preg[35] <= 1'b0;
        out_r_preg[36] <= 1'b0;
        out_r_preg[37] <= 1'b0;
        out_r_preg[38] <= 1'b0;
        out_r_preg[39] <= 1'b0;
        out_r_preg[40] <= 1'b0;
        out_r_preg[41] <= 1'b0;
        out_r_preg[42] <= 1'b0;
        out_r_preg[43] <= 1'b0;
        out_r_preg[44] <= 1'b0;
        out_r_preg[45] <= 1'b0;
        out_r_preg[46] <= 1'b0;
        out_r_preg[47] <= 1'b0;
        out_r_preg[48] <= 1'b0;
        out_r_preg[49] <= 1'b0;
        out_r_preg[50] <= 1'b0;
        out_r_preg[51] <= 1'b0;
        out_r_preg[52] <= 1'b0;
        out_r_preg[53] <= 1'b0;
        out_r_preg[54] <= 1'b0;
        out_r_preg[55] <= 1'b0;
        out_r_preg[56] <= 1'b0;
        out_r_preg[57] <= 1'b0;
        out_r_preg[58] <= 1'b0;
        out_r_preg[59] <= 1'b0;
        out_r_preg[60] <= 1'b0;
        out_r_preg[61] <= 1'b0;
        out_r_preg[62] <= 1'b0;
        out_r_preg[63] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state136)) begin
                        out_r_preg[63 : 9] <= shl_ln49_fu_74_p2[63 : 9];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        udiv_ln48_reg_101 <= 31'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state68)) begin
            udiv_ln48_reg_101 <= grp_fu_48_p2;
        end
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

assign ap_ST_fsm_state124_blk = 1'b0;

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

assign ap_ST_fsm_state134_blk = 1'b0;

assign ap_ST_fsm_state135_blk = 1'b0;

assign ap_ST_fsm_state136_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_48_ap_start = 1'b1;
    end else begin
        grp_fu_48_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_68_ap_start = 1'b1;
    end else begin
        grp_fu_68_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        out_r = shl_ln49_fu_74_p2;
    end else begin
        out_r = out_r_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        out_r_ap_vld = 1'b1;
    end else begin
        out_r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln48_fu_39_p2 = ($signed(numData) + $signed(40'd1099511627775));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_fu_48_p1 = grp_fu_48_p10;

assign grp_fu_48_p10 = add_ln48_reg_86;

assign grp_fu_68_p0 = {{trunc_ln48_fu_54_p1}, {33'd0}};

assign grp_fu_68_p1 = grp_fu_68_p10;

assign grp_fu_68_p10 = numData;

assign shl_ln49_fu_74_p2 = grp_fu_68_p2 << 64'd9;

assign trunc_ln48_fu_54_p1 = udiv_ln48_reg_101[30:0];

always @ (posedge ap_clk) begin
    out_r_preg[8:0] <= 9'b000000000;
end

endmodule //tTest_tCalc1_Block_entry5_proc

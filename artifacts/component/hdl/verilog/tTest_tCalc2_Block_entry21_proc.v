// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module tTest_tCalc2_Block_entry21_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        tCalc1ResultB,
        tCalc1ResultA,
        meanDiff,
        t,
        t_ap_vld
);

parameter    ap_ST_fsm_state1 = 158'd1;
parameter    ap_ST_fsm_state2 = 158'd2;
parameter    ap_ST_fsm_state3 = 158'd4;
parameter    ap_ST_fsm_state4 = 158'd8;
parameter    ap_ST_fsm_state5 = 158'd16;
parameter    ap_ST_fsm_state6 = 158'd32;
parameter    ap_ST_fsm_state7 = 158'd64;
parameter    ap_ST_fsm_state8 = 158'd128;
parameter    ap_ST_fsm_state9 = 158'd256;
parameter    ap_ST_fsm_state10 = 158'd512;
parameter    ap_ST_fsm_state11 = 158'd1024;
parameter    ap_ST_fsm_state12 = 158'd2048;
parameter    ap_ST_fsm_state13 = 158'd4096;
parameter    ap_ST_fsm_state14 = 158'd8192;
parameter    ap_ST_fsm_state15 = 158'd16384;
parameter    ap_ST_fsm_state16 = 158'd32768;
parameter    ap_ST_fsm_state17 = 158'd65536;
parameter    ap_ST_fsm_state18 = 158'd131072;
parameter    ap_ST_fsm_state19 = 158'd262144;
parameter    ap_ST_fsm_state20 = 158'd524288;
parameter    ap_ST_fsm_state21 = 158'd1048576;
parameter    ap_ST_fsm_state22 = 158'd2097152;
parameter    ap_ST_fsm_state23 = 158'd4194304;
parameter    ap_ST_fsm_state24 = 158'd8388608;
parameter    ap_ST_fsm_state25 = 158'd16777216;
parameter    ap_ST_fsm_state26 = 158'd33554432;
parameter    ap_ST_fsm_state27 = 158'd67108864;
parameter    ap_ST_fsm_state28 = 158'd134217728;
parameter    ap_ST_fsm_state29 = 158'd268435456;
parameter    ap_ST_fsm_state30 = 158'd536870912;
parameter    ap_ST_fsm_state31 = 158'd1073741824;
parameter    ap_ST_fsm_state32 = 158'd2147483648;
parameter    ap_ST_fsm_state33 = 158'd4294967296;
parameter    ap_ST_fsm_state34 = 158'd8589934592;
parameter    ap_ST_fsm_state35 = 158'd17179869184;
parameter    ap_ST_fsm_state36 = 158'd34359738368;
parameter    ap_ST_fsm_state37 = 158'd68719476736;
parameter    ap_ST_fsm_state38 = 158'd137438953472;
parameter    ap_ST_fsm_state39 = 158'd274877906944;
parameter    ap_ST_fsm_state40 = 158'd549755813888;
parameter    ap_ST_fsm_state41 = 158'd1099511627776;
parameter    ap_ST_fsm_state42 = 158'd2199023255552;
parameter    ap_ST_fsm_state43 = 158'd4398046511104;
parameter    ap_ST_fsm_state44 = 158'd8796093022208;
parameter    ap_ST_fsm_state45 = 158'd17592186044416;
parameter    ap_ST_fsm_state46 = 158'd35184372088832;
parameter    ap_ST_fsm_state47 = 158'd70368744177664;
parameter    ap_ST_fsm_state48 = 158'd140737488355328;
parameter    ap_ST_fsm_state49 = 158'd281474976710656;
parameter    ap_ST_fsm_state50 = 158'd562949953421312;
parameter    ap_ST_fsm_state51 = 158'd1125899906842624;
parameter    ap_ST_fsm_state52 = 158'd2251799813685248;
parameter    ap_ST_fsm_state53 = 158'd4503599627370496;
parameter    ap_ST_fsm_state54 = 158'd9007199254740992;
parameter    ap_ST_fsm_state55 = 158'd18014398509481984;
parameter    ap_ST_fsm_state56 = 158'd36028797018963968;
parameter    ap_ST_fsm_state57 = 158'd72057594037927936;
parameter    ap_ST_fsm_state58 = 158'd144115188075855872;
parameter    ap_ST_fsm_state59 = 158'd288230376151711744;
parameter    ap_ST_fsm_state60 = 158'd576460752303423488;
parameter    ap_ST_fsm_state61 = 158'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 158'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 158'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 158'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 158'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 158'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 158'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 158'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 158'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 158'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 158'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 158'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 158'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 158'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 158'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 158'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 158'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 158'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 158'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 158'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 158'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 158'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 158'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 158'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 158'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 158'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 158'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 158'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 158'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 158'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 158'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 158'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 158'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 158'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 158'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 158'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 158'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 158'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 158'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 158'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 158'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 158'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 158'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 158'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 158'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 158'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 158'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 158'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 158'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 158'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 158'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 158'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 158'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 158'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 158'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 158'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 158'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 158'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 158'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 158'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 158'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 158'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 158'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 158'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 158'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 158'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 158'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 158'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 158'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 158'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 158'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 158'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 158'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 158'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 158'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 158'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 158'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 158'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 158'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 158'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 158'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 158'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 158'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 158'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 158'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 158'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 158'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 158'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 158'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 158'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 158'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 158'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 158'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 158'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 158'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 158'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 158'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 158'd182687704666362864775460604089535377456991567872;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] tCalc1ResultB;
input  [63:0] tCalc1ResultA;
input  [31:0] meanDiff;
output  [31:0] t;
output   t_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] t;
reg t_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [157:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [64:0] add_ln55_fu_172_p2;
reg   [64:0] add_ln55_reg_737;
reg    ap_block_state1;
wire   [31:0] trunc_ln55_fu_196_p1;
reg   [31:0] trunc_ln55_reg_746;
wire   [0:0] icmp_ln55_1_fu_200_p2;
reg   [0:0] icmp_ln55_1_reg_751;
wire   [31:0] add_ln55_1_fu_226_p2;
reg   [31:0] add_ln55_1_reg_756;
wire   [10:0] trunc_ln55_2_fu_237_p1;
reg   [10:0] trunc_ln55_2_reg_761;
wire    ap_CS_fsm_state2;
wire   [31:0] sub_ln55_fu_241_p2;
reg   [31:0] sub_ln55_reg_766;
wire   [6:0] sub_ln55_6_fu_251_p2;
reg   [6:0] sub_ln55_6_reg_773;
wire   [0:0] icmp_ln55_3_fu_271_p2;
reg   [0:0] icmp_ln55_3_reg_778;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln55_fu_277_p2;
reg   [0:0] icmp_ln55_reg_783;
wire    ap_CS_fsm_state4;
wire   [1:0] or_ln55_2_fu_341_p3;
reg   [1:0] or_ln55_2_reg_788;
wire   [0:0] icmp_ln55_4_fu_349_p2;
reg   [0:0] icmp_ln55_4_reg_793;
wire   [64:0] lshr_ln55_fu_364_p2;
reg   [64:0] lshr_ln55_reg_798;
wire   [64:0] shl_ln55_fu_378_p2;
reg   [64:0] shl_ln55_reg_803;
reg   [62:0] lshr_ln55_1_reg_808;
wire    ap_CS_fsm_state5;
reg   [0:0] tmp_5_reg_813;
wire   [63:0] select_ln55_6_fu_468_p3;
reg   [63:0] select_ln55_6_reg_818;
wire    ap_CS_fsm_state6;
wire   [63:0] grp_fu_145_p2;
reg   [63:0] pf_reg_823;
wire    ap_CS_fsm_state63;
wire   [0:0] tmp_6_fu_482_p3;
reg   [0:0] tmp_6_reg_828;
wire    ap_CS_fsm_state64;
wire  signed [53:0] select_ln55_1_fu_526_p3;
reg  signed [53:0] select_ln55_1_reg_833;
wire   [0:0] icmp_ln55_5_fu_534_p2;
reg   [0:0] icmp_ln55_5_reg_840;
wire   [0:0] icmp_ln55_6_fu_550_p2;
reg   [0:0] icmp_ln55_6_reg_846;
wire   [10:0] select_ln55_2_fu_568_p3;
reg   [10:0] select_ln55_2_reg_852;
wire   [0:0] icmp_ln55_7_fu_576_p2;
reg   [0:0] icmp_ln55_7_reg_859;
wire   [0:0] icmp_ln55_9_fu_592_p2;
reg   [0:0] icmp_ln55_9_reg_865;
wire   [0:0] icmp_ln55_8_fu_601_p2;
reg   [0:0] icmp_ln55_8_reg_870;
wire    ap_CS_fsm_state65;
wire   [53:0] ashr_ln55_fu_625_p2;
reg   [53:0] ashr_ln55_reg_875;
wire   [0:0] or_ln55_1_fu_664_p2;
reg   [0:0] or_ln55_1_reg_880;
wire   [63:0] select_ln55_8_fu_673_p3;
reg   [63:0] select_ln55_8_reg_885;
wire    ap_CS_fsm_state66;
wire   [31:0] shl_ln56_1_fu_728_p3;
reg   [31:0] t_preg;
wire    ap_CS_fsm_state158;
wire    ap_CS_fsm_state7;
wire   [0:0] trunc_ln53_fu_150_p1;
wire   [0:0] trunc_ln53_1_fu_154_p1;
wire   [64:0] zext_ln55_1_fu_164_p1;
wire   [64:0] zext_ln55_fu_168_p1;
wire   [63:0] tmp1_fu_178_p4;
reg   [63:0] tmp_1_fu_188_p3;
wire   [0:0] xor_ln55_fu_158_p2;
wire   [63:0] tmp_3_fu_206_p3;
reg   [63:0] tmp_4_fu_214_p3;
wire   [31:0] trunc_ln55_1_fu_222_p1;
wire   [31:0] select_ln55_fu_232_p3;
wire   [6:0] trunc_ln55_3_fu_247_p1;
wire   [64:0] zext_ln55_6_fu_257_p1;
wire   [64:0] lshr_ln55_2_fu_260_p2;
wire   [64:0] and_ln55_6_fu_266_p2;
wire   [31:0] add_ln55_2_fu_282_p2;
wire   [30:0] tmp_fu_287_p4;
wire   [0:0] icmp_ln55_2_fu_297_p2;
wire   [0:0] tmp_2_fu_308_p3;
wire   [0:0] bit_select_i_i_fu_322_p3;
wire   [0:0] xor_ln55_3_fu_316_p2;
wire   [0:0] and_ln55_1_fu_329_p2;
wire   [0:0] and_ln55_fu_303_p2;
wire   [0:0] or_ln55_fu_335_p2;
wire   [31:0] add_ln55_3_fu_355_p2;
wire   [64:0] zext_ln55_2_fu_360_p1;
wire   [31:0] sub_ln55_1_fu_369_p2;
wire   [64:0] zext_ln55_3_fu_374_p1;
wire   [63:0] trunc_ln55_4_fu_383_p1;
wire   [63:0] trunc_ln55_5_fu_386_p1;
wire   [63:0] select_ln55_4_fu_389_p3;
wire   [63:0] zext_ln55_4_fu_396_p1;
wire   [63:0] add_ln55_4_fu_399_p2;
wire   [10:0] sub_ln55_5_fu_433_p2;
wire   [10:0] select_ln55_5_fu_426_p3;
wire   [10:0] add_ln55_5_fu_438_p2;
wire   [63:0] zext_ln55_9_fu_423_p1;
wire   [11:0] tmp_8_fu_444_p3;
wire   [63:0] pi_assign_fu_452_p5;
wire   [63:0] bitcast_ln756_fu_464_p1;
wire   [63:0] bitcast_ln724_fu_475_p1;
wire   [10:0] tmp_s_fu_490_p4;
wire   [51:0] trunc_ln55_7_fu_504_p1;
wire   [52:0] zext_ln55_6_cast_fu_508_p3;
wire   [53:0] zext_ln55_10_fu_516_p1;
wire   [53:0] sub_ln55_2_fu_520_p2;
wire   [62:0] trunc_ln55_6_fu_478_p1;
wire   [11:0] zext_ln55_5_fu_500_p1;
wire   [11:0] sub_ln55_3_fu_540_p2;
wire   [10:0] trunc_ln55_8_fu_546_p1;
wire   [10:0] add_ln55_6_fu_556_p2;
wire   [10:0] sub_ln55_4_fu_562_p2;
wire   [4:0] tmp_7_fu_582_p4;
wire  signed [63:0] sext_ln55_fu_598_p1;
wire   [63:0] zext_ln55_7_fu_606_p1;
wire   [63:0] shl_ln55_1_fu_609_p2;
wire   [53:0] zext_ln55_8_fu_622_p1;
wire   [0:0] xor_ln55_1_fu_630_p2;
wire   [0:0] and_ln55_2_fu_635_p2;
wire   [0:0] and_ln55_3_fu_648_p2;
wire   [53:0] select_ln55_9_fu_640_p3;
wire   [53:0] select_ln55_7_fu_653_p3;
wire   [0:0] or_ln55_3_fu_668_p2;
wire  signed [63:0] sext_ln55_2_fu_660_p1;
wire   [63:0] select_ln55_3_fu_615_p3;
wire   [0:0] xor_ln55_2_fu_684_p2;
wire   [0:0] and_ln55_4_fu_689_p2;
wire   [0:0] and_ln55_5_fu_694_p2;
wire  signed [63:0] sext_ln55_1_fu_681_p1;
wire   [63:0] denom_fu_699_p3;
wire   [88:0] grp_fu_718_p0;
wire   [63:0] grp_fu_718_p1;
wire   [27:0] grp_fu_718_p2;
wire   [27:0] trunc_ln56_fu_724_p1;
reg    grp_fu_718_ap_start;
wire    grp_fu_718_ap_done;
reg   [157:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
wire    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
wire    ap_ST_fsm_state134_blk;
wire    ap_ST_fsm_state135_blk;
wire    ap_ST_fsm_state136_blk;
wire    ap_ST_fsm_state137_blk;
wire    ap_ST_fsm_state138_blk;
wire    ap_ST_fsm_state139_blk;
wire    ap_ST_fsm_state140_blk;
wire    ap_ST_fsm_state141_blk;
wire    ap_ST_fsm_state142_blk;
wire    ap_ST_fsm_state143_blk;
wire    ap_ST_fsm_state144_blk;
wire    ap_ST_fsm_state145_blk;
wire    ap_ST_fsm_state146_blk;
wire    ap_ST_fsm_state147_blk;
wire    ap_ST_fsm_state148_blk;
wire    ap_ST_fsm_state149_blk;
wire    ap_ST_fsm_state150_blk;
wire    ap_ST_fsm_state151_blk;
wire    ap_ST_fsm_state152_blk;
wire    ap_ST_fsm_state153_blk;
wire    ap_ST_fsm_state154_blk;
wire    ap_ST_fsm_state155_blk;
wire    ap_ST_fsm_state156_blk;
wire    ap_ST_fsm_state157_blk;
wire    ap_ST_fsm_state158_blk;
wire   [88:0] grp_fu_718_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 158'd1;
#0 add_ln55_reg_737 = 65'd0;
#0 trunc_ln55_reg_746 = 32'd0;
#0 icmp_ln55_1_reg_751 = 1'd0;
#0 add_ln55_1_reg_756 = 32'd0;
#0 trunc_ln55_2_reg_761 = 11'd0;
#0 sub_ln55_reg_766 = 32'd0;
#0 sub_ln55_6_reg_773 = 7'd0;
#0 icmp_ln55_3_reg_778 = 1'd0;
#0 icmp_ln55_reg_783 = 1'd0;
#0 or_ln55_2_reg_788 = 2'd0;
#0 icmp_ln55_4_reg_793 = 1'd0;
#0 lshr_ln55_reg_798 = 65'd0;
#0 shl_ln55_reg_803 = 65'd0;
#0 lshr_ln55_1_reg_808 = 63'd0;
#0 tmp_5_reg_813 = 1'd0;
#0 select_ln55_6_reg_818 = 64'd0;
#0 pf_reg_823 = 64'd0;
#0 tmp_6_reg_828 = 1'd0;
#0 select_ln55_1_reg_833 = 54'd0;
#0 icmp_ln55_5_reg_840 = 1'd0;
#0 icmp_ln55_6_reg_846 = 1'd0;
#0 select_ln55_2_reg_852 = 11'd0;
#0 icmp_ln55_7_reg_859 = 1'd0;
#0 icmp_ln55_9_reg_865 = 1'd0;
#0 icmp_ln55_8_reg_870 = 1'd0;
#0 ashr_ln55_reg_875 = 54'd0;
#0 or_ln55_1_reg_880 = 1'd0;
#0 select_ln55_8_reg_885 = 64'd0;
#0 t_preg = 32'd0;
end

tTest_dsqrt_64ns_64ns_64_57_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 57 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsqrt_64ns_64ns_64_57_no_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(select_ln55_6_reg_818),
    .ce(1'b1),
    .dout(grp_fu_145_p2)
);

tTest_udiv_89ns_64ns_28_93_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 93 ),
    .din0_WIDTH( 89 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 28 ))
udiv_89ns_64ns_28_93_seq_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_718_ap_start),
    .done(grp_fu_718_ap_done),
    .din0(grp_fu_718_p0),
    .din1(grp_fu_718_p1),
    .ce(1'b1),
    .dout(grp_fu_718_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        add_ln55_1_reg_756 <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
            add_ln55_1_reg_756 <= add_ln55_1_fu_226_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        add_ln55_reg_737 <= 65'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
            add_ln55_reg_737 <= add_ln55_fu_172_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state158)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ashr_ln55_reg_875 <= 54'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state65)) begin
            ashr_ln55_reg_875 <= ashr_ln55_fu_625_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln55_1_reg_751 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
            icmp_ln55_1_reg_751 <= icmp_ln55_1_fu_200_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln55_3_reg_778 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            icmp_ln55_3_reg_778 <= icmp_ln55_3_fu_271_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln55_4_reg_793 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            icmp_ln55_4_reg_793 <= icmp_ln55_4_fu_349_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln55_5_reg_840 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state64)) begin
            icmp_ln55_5_reg_840 <= icmp_ln55_5_fu_534_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln55_6_reg_846 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state64)) begin
            icmp_ln55_6_reg_846 <= icmp_ln55_6_fu_550_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln55_7_reg_859 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state64)) begin
            icmp_ln55_7_reg_859 <= icmp_ln55_7_fu_576_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln55_8_reg_870 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state65)) begin
            icmp_ln55_8_reg_870 <= icmp_ln55_8_fu_601_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln55_9_reg_865 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state64)) begin
            icmp_ln55_9_reg_865 <= icmp_ln55_9_fu_592_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln55_reg_783 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            icmp_ln55_reg_783 <= icmp_ln55_fu_277_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lshr_ln55_1_reg_808 <= 63'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            lshr_ln55_1_reg_808 <= {{add_ln55_4_fu_399_p2[63:1]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lshr_ln55_reg_798 <= 65'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            lshr_ln55_reg_798 <= lshr_ln55_fu_364_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln55_1_reg_880 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state65)) begin
            or_ln55_1_reg_880 <= or_ln55_1_fu_664_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                or_ln55_2_reg_788[0] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
                        or_ln55_2_reg_788[0] <= or_ln55_2_fu_341_p3[0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pf_reg_823 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state63)) begin
            pf_reg_823 <= grp_fu_145_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        select_ln55_1_reg_833 <= 54'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state64)) begin
            select_ln55_1_reg_833 <= select_ln55_1_fu_526_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        select_ln55_2_reg_852 <= 11'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state64)) begin
            select_ln55_2_reg_852 <= select_ln55_2_fu_568_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        select_ln55_6_reg_818 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            select_ln55_6_reg_818 <= select_ln55_6_fu_468_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        select_ln55_8_reg_885 <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state65)) begin
            select_ln55_8_reg_885 <= select_ln55_8_fu_673_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        shl_ln55_reg_803 <= 65'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            shl_ln55_reg_803 <= shl_ln55_fu_378_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        sub_ln55_6_reg_773 <= 7'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            sub_ln55_6_reg_773 <= sub_ln55_6_fu_251_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        sub_ln55_reg_766 <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            sub_ln55_reg_766 <= sub_ln55_fu_241_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                t_preg[4] <= 1'b0;
        t_preg[5] <= 1'b0;
        t_preg[6] <= 1'b0;
        t_preg[7] <= 1'b0;
        t_preg[8] <= 1'b0;
        t_preg[9] <= 1'b0;
        t_preg[10] <= 1'b0;
        t_preg[11] <= 1'b0;
        t_preg[12] <= 1'b0;
        t_preg[13] <= 1'b0;
        t_preg[14] <= 1'b0;
        t_preg[15] <= 1'b0;
        t_preg[16] <= 1'b0;
        t_preg[17] <= 1'b0;
        t_preg[18] <= 1'b0;
        t_preg[19] <= 1'b0;
        t_preg[20] <= 1'b0;
        t_preg[21] <= 1'b0;
        t_preg[22] <= 1'b0;
        t_preg[23] <= 1'b0;
        t_preg[24] <= 1'b0;
        t_preg[25] <= 1'b0;
        t_preg[26] <= 1'b0;
        t_preg[27] <= 1'b0;
        t_preg[28] <= 1'b0;
        t_preg[29] <= 1'b0;
        t_preg[30] <= 1'b0;
        t_preg[31] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state158)) begin
                        t_preg[31 : 4] <= shl_ln56_1_fu_728_p3[31 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_5_reg_813 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            tmp_5_reg_813 <= add_ln55_4_fu_399_p2[32'd54];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_6_reg_828 <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state64)) begin
            tmp_6_reg_828 <= bitcast_ln724_fu_475_p1[32'd63];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        trunc_ln55_2_reg_761 <= 11'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            trunc_ln55_2_reg_761 <= trunc_ln55_2_fu_237_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        trunc_ln55_reg_746 <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
            trunc_ln55_reg_746 <= trunc_ln55_fu_196_p1;
        end
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

assign ap_ST_fsm_state124_blk = 1'b0;

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

assign ap_ST_fsm_state134_blk = 1'b0;

assign ap_ST_fsm_state135_blk = 1'b0;

assign ap_ST_fsm_state136_blk = 1'b0;

assign ap_ST_fsm_state137_blk = 1'b0;

assign ap_ST_fsm_state138_blk = 1'b0;

assign ap_ST_fsm_state139_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state140_blk = 1'b0;

assign ap_ST_fsm_state141_blk = 1'b0;

assign ap_ST_fsm_state142_blk = 1'b0;

assign ap_ST_fsm_state143_blk = 1'b0;

assign ap_ST_fsm_state144_blk = 1'b0;

assign ap_ST_fsm_state145_blk = 1'b0;

assign ap_ST_fsm_state146_blk = 1'b0;

assign ap_ST_fsm_state147_blk = 1'b0;

assign ap_ST_fsm_state148_blk = 1'b0;

assign ap_ST_fsm_state149_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state150_blk = 1'b0;

assign ap_ST_fsm_state151_blk = 1'b0;

assign ap_ST_fsm_state152_blk = 1'b0;

assign ap_ST_fsm_state153_blk = 1'b0;

assign ap_ST_fsm_state154_blk = 1'b0;

assign ap_ST_fsm_state155_blk = 1'b0;

assign ap_ST_fsm_state156_blk = 1'b0;

assign ap_ST_fsm_state157_blk = 1'b0;

assign ap_ST_fsm_state158_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_718_ap_start = 1'b1;
    end else begin
        grp_fu_718_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        t = shl_ln56_1_fu_728_p3;
    end else begin
        t = t_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        t_ap_vld = 1'b1;
    end else begin
        t_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln55_1_fu_226_p2 = (trunc_ln55_1_fu_222_p1 + trunc_ln55_fu_196_p1);

assign add_ln55_2_fu_282_p2 = ($signed(sub_ln55_reg_766) + $signed(32'd4294967243));

assign add_ln55_3_fu_355_p2 = ($signed(sub_ln55_reg_766) + $signed(32'd4294967242));

assign add_ln55_4_fu_399_p2 = (select_ln55_4_fu_389_p3 + zext_ln55_4_fu_396_p1);

assign add_ln55_5_fu_438_p2 = (sub_ln55_5_fu_433_p2 + select_ln55_5_fu_426_p3);

assign add_ln55_6_fu_556_p2 = ($signed(trunc_ln55_8_fu_546_p1) + $signed(11'd1991));

assign add_ln55_fu_172_p2 = (zext_ln55_1_fu_164_p1 + zext_ln55_fu_168_p1);

assign and_ln55_1_fu_329_p2 = (xor_ln55_3_fu_316_p2 & bit_select_i_i_fu_322_p3);

assign and_ln55_2_fu_635_p2 = (xor_ln55_1_fu_630_p2 & tmp_6_reg_828);

assign and_ln55_3_fu_648_p2 = (xor_ln55_1_fu_630_p2 & icmp_ln55_7_reg_859);

assign and_ln55_4_fu_689_p2 = (xor_ln55_2_fu_684_p2 & icmp_ln55_8_reg_870);

assign and_ln55_5_fu_694_p2 = (icmp_ln55_6_reg_846 & and_ln55_4_fu_689_p2);

assign and_ln55_6_fu_266_p2 = (lshr_ln55_2_fu_260_p2 & add_ln55_reg_737);

assign and_ln55_fu_303_p2 = (icmp_ln55_3_reg_778 & icmp_ln55_2_fu_297_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ashr_ln55_fu_625_p2 = $signed(select_ln55_1_reg_833) >>> zext_ln55_8_fu_622_p1;

assign bit_select_i_i_fu_322_p3 = add_ln55_reg_737[add_ln55_2_fu_282_p2];

assign bitcast_ln724_fu_475_p1 = pf_reg_823;

assign bitcast_ln756_fu_464_p1 = pi_assign_fu_452_p5;

assign denom_fu_699_p3 = ((and_ln55_5_fu_694_p2[0:0] == 1'b1) ? sext_ln55_1_fu_681_p1 : select_ln55_8_reg_885);

assign grp_fu_718_p0 = {{meanDiff}, {57'd0}};

assign grp_fu_718_p1 = grp_fu_718_p10;

assign grp_fu_718_p10 = denom_fu_699_p3;

assign icmp_ln55_1_fu_200_p2 = ((tmp1_fu_178_p4 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln55_2_fu_297_p2 = (($signed(tmp_fu_287_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln55_3_fu_271_p2 = ((and_ln55_6_fu_266_p2 != 65'd0) ? 1'b1 : 1'b0);

assign icmp_ln55_4_fu_349_p2 = (($signed(add_ln55_2_fu_282_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln55_5_fu_534_p2 = ((trunc_ln55_6_fu_478_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln55_6_fu_550_p2 = (($signed(sub_ln55_3_fu_540_p2) > $signed(12'd57)) ? 1'b1 : 1'b0);

assign icmp_ln55_7_fu_576_p2 = ((sub_ln55_3_fu_540_p2 == 12'd57) ? 1'b1 : 1'b0);

assign icmp_ln55_8_fu_601_p2 = ((select_ln55_2_reg_852 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln55_9_fu_592_p2 = ((tmp_7_fu_582_p4 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_277_p2 = ((add_ln55_reg_737 == 65'd0) ? 1'b1 : 1'b0);

assign lshr_ln55_2_fu_260_p2 = 65'd36893488147419103231 >> zext_ln55_6_fu_257_p1;

assign lshr_ln55_fu_364_p2 = add_ln55_reg_737 >> zext_ln55_2_fu_360_p1;

assign or_ln55_1_fu_664_p2 = (icmp_ln55_7_reg_859 | icmp_ln55_5_reg_840);

assign or_ln55_2_fu_341_p3 = {{1'd0}, {or_ln55_fu_335_p2}};

assign or_ln55_3_fu_668_p2 = (or_ln55_1_fu_664_p2 | icmp_ln55_6_reg_846);

assign or_ln55_fu_335_p2 = (and_ln55_fu_303_p2 | and_ln55_1_fu_329_p2);

assign pi_assign_fu_452_p5 = {{tmp_8_fu_444_p3}, {zext_ln55_9_fu_423_p1[51:0]}};

assign select_ln55_1_fu_526_p3 = ((tmp_6_fu_482_p3[0:0] == 1'b1) ? sub_ln55_2_fu_520_p2 : zext_ln55_10_fu_516_p1);

assign select_ln55_2_fu_568_p3 = ((icmp_ln55_6_fu_550_p2[0:0] == 1'b1) ? add_ln55_6_fu_556_p2 : sub_ln55_4_fu_562_p2);

assign select_ln55_3_fu_615_p3 = ((icmp_ln55_9_reg_865[0:0] == 1'b1) ? shl_ln55_1_fu_609_p2 : 64'd0);

assign select_ln55_4_fu_389_p3 = ((icmp_ln55_4_reg_793[0:0] == 1'b1) ? trunc_ln55_4_fu_383_p1 : trunc_ln55_5_fu_386_p1);

assign select_ln55_5_fu_426_p3 = ((tmp_5_reg_813[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln55_6_fu_468_p3 = ((icmp_ln55_reg_783[0:0] == 1'b1) ? 64'd0 : bitcast_ln756_fu_464_p1);

assign select_ln55_7_fu_653_p3 = ((and_ln55_3_fu_648_p2[0:0] == 1'b1) ? select_ln55_1_reg_833 : select_ln55_9_fu_640_p3);

assign select_ln55_8_fu_673_p3 = ((or_ln55_3_fu_668_p2[0:0] == 1'b1) ? sext_ln55_2_fu_660_p1 : select_ln55_3_fu_615_p3);

assign select_ln55_9_fu_640_p3 = ((and_ln55_2_fu_635_p2[0:0] == 1'b1) ? 54'd18014398509481983 : 54'd0);

assign select_ln55_fu_232_p3 = ((icmp_ln55_1_reg_751[0:0] == 1'b1) ? add_ln55_1_reg_756 : trunc_ln55_reg_746);

assign sext_ln55_1_fu_681_p1 = $signed(ashr_ln55_reg_875);

assign sext_ln55_2_fu_660_p1 = $signed(select_ln55_7_fu_653_p3);

assign sext_ln55_fu_598_p1 = select_ln55_1_reg_833;

assign shl_ln55_1_fu_609_p2 = sext_ln55_fu_598_p1 << zext_ln55_7_fu_606_p1;

assign shl_ln55_fu_378_p2 = add_ln55_reg_737 << zext_ln55_3_fu_374_p1;

assign shl_ln56_1_fu_728_p3 = {{trunc_ln56_fu_724_p1}, {4'd0}};

assign sub_ln55_1_fu_369_p2 = (32'd54 - sub_ln55_reg_766);

assign sub_ln55_2_fu_520_p2 = (54'd0 - zext_ln55_10_fu_516_p1);

assign sub_ln55_3_fu_540_p2 = (12'd1075 - zext_ln55_5_fu_500_p1);

assign sub_ln55_4_fu_562_p2 = (11'd57 - trunc_ln55_8_fu_546_p1);

assign sub_ln55_5_fu_433_p2 = (11'd15 - trunc_ln55_2_reg_761);

assign sub_ln55_6_fu_251_p2 = ($signed(7'd119) - $signed(trunc_ln55_3_fu_247_p1));

assign sub_ln55_fu_241_p2 = (32'd65 - select_ln55_fu_232_p3);

assign tmp1_fu_178_p4 = {{add_ln55_fu_172_p2[64:1]}};

always @ (tmp1_fu_178_p4) begin
    if (tmp1_fu_178_p4[63] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd0;
    end else if (tmp1_fu_178_p4[62] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd1;
    end else if (tmp1_fu_178_p4[61] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd2;
    end else if (tmp1_fu_178_p4[60] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd3;
    end else if (tmp1_fu_178_p4[59] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd4;
    end else if (tmp1_fu_178_p4[58] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd5;
    end else if (tmp1_fu_178_p4[57] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd6;
    end else if (tmp1_fu_178_p4[56] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd7;
    end else if (tmp1_fu_178_p4[55] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd8;
    end else if (tmp1_fu_178_p4[54] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd9;
    end else if (tmp1_fu_178_p4[53] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd10;
    end else if (tmp1_fu_178_p4[52] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd11;
    end else if (tmp1_fu_178_p4[51] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd12;
    end else if (tmp1_fu_178_p4[50] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd13;
    end else if (tmp1_fu_178_p4[49] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd14;
    end else if (tmp1_fu_178_p4[48] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd15;
    end else if (tmp1_fu_178_p4[47] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd16;
    end else if (tmp1_fu_178_p4[46] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd17;
    end else if (tmp1_fu_178_p4[45] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd18;
    end else if (tmp1_fu_178_p4[44] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd19;
    end else if (tmp1_fu_178_p4[43] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd20;
    end else if (tmp1_fu_178_p4[42] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd21;
    end else if (tmp1_fu_178_p4[41] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd22;
    end else if (tmp1_fu_178_p4[40] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd23;
    end else if (tmp1_fu_178_p4[39] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd24;
    end else if (tmp1_fu_178_p4[38] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd25;
    end else if (tmp1_fu_178_p4[37] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd26;
    end else if (tmp1_fu_178_p4[36] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd27;
    end else if (tmp1_fu_178_p4[35] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd28;
    end else if (tmp1_fu_178_p4[34] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd29;
    end else if (tmp1_fu_178_p4[33] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd30;
    end else if (tmp1_fu_178_p4[32] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd31;
    end else if (tmp1_fu_178_p4[31] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd32;
    end else if (tmp1_fu_178_p4[30] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd33;
    end else if (tmp1_fu_178_p4[29] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd34;
    end else if (tmp1_fu_178_p4[28] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd35;
    end else if (tmp1_fu_178_p4[27] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd36;
    end else if (tmp1_fu_178_p4[26] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd37;
    end else if (tmp1_fu_178_p4[25] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd38;
    end else if (tmp1_fu_178_p4[24] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd39;
    end else if (tmp1_fu_178_p4[23] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd40;
    end else if (tmp1_fu_178_p4[22] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd41;
    end else if (tmp1_fu_178_p4[21] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd42;
    end else if (tmp1_fu_178_p4[20] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd43;
    end else if (tmp1_fu_178_p4[19] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd44;
    end else if (tmp1_fu_178_p4[18] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd45;
    end else if (tmp1_fu_178_p4[17] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd46;
    end else if (tmp1_fu_178_p4[16] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd47;
    end else if (tmp1_fu_178_p4[15] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd48;
    end else if (tmp1_fu_178_p4[14] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd49;
    end else if (tmp1_fu_178_p4[13] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd50;
    end else if (tmp1_fu_178_p4[12] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd51;
    end else if (tmp1_fu_178_p4[11] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd52;
    end else if (tmp1_fu_178_p4[10] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd53;
    end else if (tmp1_fu_178_p4[9] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd54;
    end else if (tmp1_fu_178_p4[8] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd55;
    end else if (tmp1_fu_178_p4[7] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd56;
    end else if (tmp1_fu_178_p4[6] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd57;
    end else if (tmp1_fu_178_p4[5] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd58;
    end else if (tmp1_fu_178_p4[4] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd59;
    end else if (tmp1_fu_178_p4[3] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd60;
    end else if (tmp1_fu_178_p4[2] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd61;
    end else if (tmp1_fu_178_p4[1] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd62;
    end else if (tmp1_fu_178_p4[0] == 1'b1) begin
        tmp_1_fu_188_p3 = 64'd63;
    end else begin
        tmp_1_fu_188_p3 = 64'd64;
    end
end

assign tmp_2_fu_308_p3 = add_ln55_2_fu_282_p2[32'd31];

assign tmp_3_fu_206_p3 = {{xor_ln55_fu_158_p2}, {63'd9223372036854775807}};

always @ (tmp_3_fu_206_p3) begin
    if (tmp_3_fu_206_p3[63] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd0;
    end else if (tmp_3_fu_206_p3[62] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd1;
    end else if (tmp_3_fu_206_p3[61] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd2;
    end else if (tmp_3_fu_206_p3[60] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd3;
    end else if (tmp_3_fu_206_p3[59] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd4;
    end else if (tmp_3_fu_206_p3[58] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd5;
    end else if (tmp_3_fu_206_p3[57] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd6;
    end else if (tmp_3_fu_206_p3[56] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd7;
    end else if (tmp_3_fu_206_p3[55] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd8;
    end else if (tmp_3_fu_206_p3[54] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd9;
    end else if (tmp_3_fu_206_p3[53] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd10;
    end else if (tmp_3_fu_206_p3[52] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd11;
    end else if (tmp_3_fu_206_p3[51] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd12;
    end else if (tmp_3_fu_206_p3[50] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd13;
    end else if (tmp_3_fu_206_p3[49] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd14;
    end else if (tmp_3_fu_206_p3[48] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd15;
    end else if (tmp_3_fu_206_p3[47] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd16;
    end else if (tmp_3_fu_206_p3[46] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd17;
    end else if (tmp_3_fu_206_p3[45] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd18;
    end else if (tmp_3_fu_206_p3[44] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd19;
    end else if (tmp_3_fu_206_p3[43] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd20;
    end else if (tmp_3_fu_206_p3[42] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd21;
    end else if (tmp_3_fu_206_p3[41] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd22;
    end else if (tmp_3_fu_206_p3[40] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd23;
    end else if (tmp_3_fu_206_p3[39] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd24;
    end else if (tmp_3_fu_206_p3[38] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd25;
    end else if (tmp_3_fu_206_p3[37] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd26;
    end else if (tmp_3_fu_206_p3[36] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd27;
    end else if (tmp_3_fu_206_p3[35] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd28;
    end else if (tmp_3_fu_206_p3[34] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd29;
    end else if (tmp_3_fu_206_p3[33] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd30;
    end else if (tmp_3_fu_206_p3[32] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd31;
    end else if (tmp_3_fu_206_p3[31] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd32;
    end else if (tmp_3_fu_206_p3[30] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd33;
    end else if (tmp_3_fu_206_p3[29] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd34;
    end else if (tmp_3_fu_206_p3[28] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd35;
    end else if (tmp_3_fu_206_p3[27] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd36;
    end else if (tmp_3_fu_206_p3[26] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd37;
    end else if (tmp_3_fu_206_p3[25] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd38;
    end else if (tmp_3_fu_206_p3[24] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd39;
    end else if (tmp_3_fu_206_p3[23] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd40;
    end else if (tmp_3_fu_206_p3[22] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd41;
    end else if (tmp_3_fu_206_p3[21] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd42;
    end else if (tmp_3_fu_206_p3[20] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd43;
    end else if (tmp_3_fu_206_p3[19] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd44;
    end else if (tmp_3_fu_206_p3[18] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd45;
    end else if (tmp_3_fu_206_p3[17] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd46;
    end else if (tmp_3_fu_206_p3[16] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd47;
    end else if (tmp_3_fu_206_p3[15] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd48;
    end else if (tmp_3_fu_206_p3[14] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd49;
    end else if (tmp_3_fu_206_p3[13] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd50;
    end else if (tmp_3_fu_206_p3[12] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd51;
    end else if (tmp_3_fu_206_p3[11] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd52;
    end else if (tmp_3_fu_206_p3[10] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd53;
    end else if (tmp_3_fu_206_p3[9] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd54;
    end else if (tmp_3_fu_206_p3[8] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd55;
    end else if (tmp_3_fu_206_p3[7] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd56;
    end else if (tmp_3_fu_206_p3[6] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd57;
    end else if (tmp_3_fu_206_p3[5] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd58;
    end else if (tmp_3_fu_206_p3[4] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd59;
    end else if (tmp_3_fu_206_p3[3] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd60;
    end else if (tmp_3_fu_206_p3[2] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd61;
    end else if (tmp_3_fu_206_p3[1] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd62;
    end else if (tmp_3_fu_206_p3[0] == 1'b1) begin
        tmp_4_fu_214_p3 = 64'd63;
    end else begin
        tmp_4_fu_214_p3 = 64'd64;
    end
end

assign tmp_6_fu_482_p3 = bitcast_ln724_fu_475_p1[32'd63];

assign tmp_7_fu_582_p4 = {{select_ln55_2_fu_568_p3[10:6]}};

assign tmp_8_fu_444_p3 = {{1'd0}, {add_ln55_5_fu_438_p2}};

assign tmp_fu_287_p4 = {{add_ln55_2_fu_282_p2[31:1]}};

assign tmp_s_fu_490_p4 = {{bitcast_ln724_fu_475_p1[62:52]}};

assign trunc_ln53_1_fu_154_p1 = tCalc1ResultA[0:0];

assign trunc_ln53_fu_150_p1 = tCalc1ResultB[0:0];

assign trunc_ln55_1_fu_222_p1 = tmp_4_fu_214_p3[31:0];

assign trunc_ln55_2_fu_237_p1 = select_ln55_fu_232_p3[10:0];

assign trunc_ln55_3_fu_247_p1 = sub_ln55_fu_241_p2[6:0];

assign trunc_ln55_4_fu_383_p1 = lshr_ln55_reg_798[63:0];

assign trunc_ln55_5_fu_386_p1 = shl_ln55_reg_803[63:0];

assign trunc_ln55_6_fu_478_p1 = bitcast_ln724_fu_475_p1[62:0];

assign trunc_ln55_7_fu_504_p1 = bitcast_ln724_fu_475_p1[51:0];

assign trunc_ln55_8_fu_546_p1 = sub_ln55_3_fu_540_p2[10:0];

assign trunc_ln55_fu_196_p1 = tmp_1_fu_188_p3[31:0];

assign trunc_ln56_fu_724_p1 = grp_fu_718_p2[27:0];

assign xor_ln55_1_fu_630_p2 = (icmp_ln55_5_reg_840 ^ 1'd1);

assign xor_ln55_2_fu_684_p2 = (or_ln55_1_reg_880 ^ 1'd1);

assign xor_ln55_3_fu_316_p2 = (tmp_2_fu_308_p3 ^ 1'd1);

assign xor_ln55_fu_158_p2 = (trunc_ln53_fu_150_p1 ^ trunc_ln53_1_fu_154_p1);

assign zext_ln55_10_fu_516_p1 = zext_ln55_6_cast_fu_508_p3;

assign zext_ln55_1_fu_164_p1 = tCalc1ResultB;

assign zext_ln55_2_fu_360_p1 = add_ln55_3_fu_355_p2;

assign zext_ln55_3_fu_374_p1 = sub_ln55_1_fu_369_p2;

assign zext_ln55_4_fu_396_p1 = or_ln55_2_reg_788;

assign zext_ln55_5_fu_500_p1 = tmp_s_fu_490_p4;

assign zext_ln55_6_cast_fu_508_p3 = {{1'd1}, {trunc_ln55_7_fu_504_p1}};

assign zext_ln55_6_fu_257_p1 = sub_ln55_6_reg_773;

assign zext_ln55_7_fu_606_p1 = select_ln55_2_reg_852;

assign zext_ln55_8_fu_622_p1 = select_ln55_2_reg_852;

assign zext_ln55_9_fu_423_p1 = lshr_ln55_1_reg_808;

assign zext_ln55_fu_168_p1 = tCalc1ResultA;

always @ (posedge ap_clk) begin
    or_ln55_2_reg_788[1] <= 1'b0;
    t_preg[3:0] <= 4'b0000;
end

endmodule //tTest_tCalc2_Block_entry21_proc

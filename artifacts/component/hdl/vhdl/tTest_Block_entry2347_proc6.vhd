-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tTest_Block_entry2347_proc6 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (39 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (39 downto 0);
    C_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    C_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    C_empty_n : IN STD_LOGIC;
    C_read : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (46 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (46 downto 0);
    famA_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    famA_ce0 : OUT STD_LOGIC;
    famA_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    famB_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    famB_ce0 : OUT STD_LOGIC;
    famB_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of tTest_Block_entry2347_proc6 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (87 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (87 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (87 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (87 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (87 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (87 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (87 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (87 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (87 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (87 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (87 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (87 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal C_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal C_read_reg_368 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal or_ln82_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_reg_373 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal grp_fu_212_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal udiv_ln23_reg_397 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal grp_fu_228_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal udiv_ln23_1_reg_402 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal meanA_fu_239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal meanA_reg_407 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal meanB_fu_243_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal meanB_reg_412 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal meanDiff_fu_265_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal meanDiff_reg_417 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_tCalc2_fu_178_ap_done : STD_LOGIC;
    signal grp_tCalc2_fu_178_ap_ready : STD_LOGIC;
    signal ap_sync_grp_tCalc2_fu_178_ap_ready : STD_LOGIC;
    signal ap_sync_grp_tCalc2_fu_178_ap_done : STD_LOGIC;
    signal ap_block_state82_on_subcall_done : BOOLEAN;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_start : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_done : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_idle : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_ready : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_famA_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_famA_ce0 : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_tmpSum_out : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_tmpSum_out_ap_vld : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_start : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_done : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_idle : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_ready : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_famB_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_famB_ce0 : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_tmpSum_2_out : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_tmpSum_2_out_ap_vld : STD_LOGIC;
    signal grp_tCalc1_fu_164_out_r : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tCalc1_fu_164_out_r_ap_vld : STD_LOGIC;
    signal grp_tCalc1_fu_164_ap_start : STD_LOGIC;
    signal grp_tCalc1_fu_164_ap_done : STD_LOGIC;
    signal grp_tCalc1_fu_164_ap_ready : STD_LOGIC;
    signal grp_tCalc1_fu_164_ap_idle : STD_LOGIC;
    signal grp_tCalc1_fu_164_ap_continue : STD_LOGIC;
    signal grp_tCalc1_fu_171_out_r : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tCalc1_fu_171_out_r_ap_vld : STD_LOGIC;
    signal grp_tCalc1_fu_171_ap_start : STD_LOGIC;
    signal grp_tCalc1_fu_171_ap_done : STD_LOGIC;
    signal grp_tCalc1_fu_171_ap_ready : STD_LOGIC;
    signal grp_tCalc1_fu_171_ap_idle : STD_LOGIC;
    signal grp_tCalc1_fu_171_ap_continue : STD_LOGIC;
    signal grp_tCalc2_fu_178_t : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tCalc2_fu_178_t_ap_vld : STD_LOGIC;
    signal grp_tCalc2_fu_178_ap_start : STD_LOGIC;
    signal grp_tCalc2_fu_178_ap_idle : STD_LOGIC;
    signal grp_tCalc2_fu_178_ap_continue : STD_LOGIC;
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_start_reg : STD_LOGIC := '0';
    signal grp_tCalc1_fu_164_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal ap_sync_grp_tCalc1_fu_164_ap_ready : STD_LOGIC;
    signal ap_sync_grp_tCalc1_fu_164_ap_done : STD_LOGIC;
    signal ap_sync_grp_tCalc1_fu_171_ap_ready : STD_LOGIC;
    signal ap_sync_grp_tCalc1_fu_171_ap_done : STD_LOGIC;
    signal ap_block_state80_on_subcall_done : BOOLEAN;
    signal ap_sync_reg_grp_tCalc1_fu_164_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_tCalc1_fu_164_ap_done : STD_LOGIC := '0';
    signal tCalc1ResultA_fu_94 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal grp_tCalc1_fu_171_ap_start_reg : STD_LOGIC := '0';
    signal ap_sync_reg_grp_tCalc1_fu_171_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_tCalc1_fu_171_ap_done : STD_LOGIC := '0';
    signal tCalc1ResultB_fu_98 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal grp_tCalc2_fu_178_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_sync_reg_grp_tCalc2_fu_178_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_tCalc2_fu_178_ap_done : STD_LOGIC := '0';
    signal t_fu_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sext_ln94_fu_298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln82_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln82_1_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_212_p0 : STD_LOGIC_VECTOR (70 downto 0);
    signal grp_fu_212_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_228_p0 : STD_LOGIC_VECTOR (70 downto 0);
    signal grp_fu_228_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal icmp_ln27_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln27_fu_253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln27_1_fu_259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2_fu_289_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_212_ap_start : STD_LOGIC;
    signal grp_fu_212_ap_done : STD_LOGIC;
    signal grp_fu_212_ce : STD_LOGIC;
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal grp_fu_228_ap_start : STD_LOGIC;
    signal grp_fu_228_ap_done : STD_LOGIC;
    signal grp_fu_228_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (87 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_block_state78_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal ap_ST_fsm_state88_blk : STD_LOGIC;
    signal grp_fu_212_p10 : STD_LOGIC_VECTOR (70 downto 0);
    signal grp_fu_228_p10 : STD_LOGIC_VECTOR (70 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component tTest_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln35 : IN STD_LOGIC_VECTOR (31 downto 0);
        famA_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        famA_ce0 : OUT STD_LOGIC;
        famA_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmpSum_out : OUT STD_LOGIC_VECTOR (62 downto 0);
        tmpSum_out_ap_vld : OUT STD_LOGIC );
    end component;


    component tTest_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln35_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        famB_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        famB_ce0 : OUT STD_LOGIC;
        famB_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmpSum_2_out : OUT STD_LOGIC_VECTOR (62 downto 0);
        tmpSum_2_out_ap_vld : OUT STD_LOGIC );
    end component;


    component tTest_tCalc1 IS
    port (
        varSum : IN STD_LOGIC_VECTOR (62 downto 0);
        numData : IN STD_LOGIC_VECTOR (39 downto 0);
        out_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        numData_ap_vld : IN STD_LOGIC;
        varSum_ap_vld : IN STD_LOGIC;
        out_r_ap_vld : OUT STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component tTest_tCalc2 IS
    port (
        tCalc1ResultA : IN STD_LOGIC_VECTOR (63 downto 0);
        tCalc1ResultB : IN STD_LOGIC_VECTOR (63 downto 0);
        meanDiff : IN STD_LOGIC_VECTOR (31 downto 0);
        t : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        tCalc1ResultB_ap_vld : IN STD_LOGIC;
        tCalc1ResultA_ap_vld : IN STD_LOGIC;
        meanDiff_ap_vld : IN STD_LOGIC;
        t_ap_vld : OUT STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component tTest_udiv_71ns_40ns_32_75_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (70 downto 0);
        din1 : IN STD_LOGIC_VECTOR (39 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148 : component tTest_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_start,
        ap_done => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_done,
        ap_idle => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_idle,
        ap_ready => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_ready,
        zext_ln35 => meanA_reg_407,
        famA_address0 => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_famA_address0,
        famA_ce0 => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_famA_ce0,
        famA_q0 => famA_q0,
        tmpSum_out => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_tmpSum_out,
        tmpSum_out_ap_vld => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_tmpSum_out_ap_vld);

    grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156 : component tTest_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_start,
        ap_done => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_done,
        ap_idle => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_idle,
        ap_ready => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_ready,
        zext_ln35_1 => meanB_reg_412,
        famB_address0 => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_famB_address0,
        famB_ce0 => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_famB_ce0,
        famB_q0 => famB_q0,
        tmpSum_2_out => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_tmpSum_2_out,
        tmpSum_2_out_ap_vld => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_tmpSum_2_out_ap_vld);

    grp_tCalc1_fu_164 : component tTest_tCalc1
    port map (
        varSum => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_tmpSum_out,
        numData => p_read,
        out_r => grp_tCalc1_fu_164_out_r,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        numData_ap_vld => ap_const_logic_1,
        varSum_ap_vld => ap_const_logic_1,
        out_r_ap_vld => grp_tCalc1_fu_164_out_r_ap_vld,
        ap_start => grp_tCalc1_fu_164_ap_start,
        ap_done => grp_tCalc1_fu_164_ap_done,
        ap_ready => grp_tCalc1_fu_164_ap_ready,
        ap_idle => grp_tCalc1_fu_164_ap_idle,
        ap_continue => grp_tCalc1_fu_164_ap_continue);

    grp_tCalc1_fu_171 : component tTest_tCalc1
    port map (
        varSum => grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_tmpSum_2_out,
        numData => p_read1,
        out_r => grp_tCalc1_fu_171_out_r,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        numData_ap_vld => ap_const_logic_1,
        varSum_ap_vld => ap_const_logic_1,
        out_r_ap_vld => grp_tCalc1_fu_171_out_r_ap_vld,
        ap_start => grp_tCalc1_fu_171_ap_start,
        ap_done => grp_tCalc1_fu_171_ap_done,
        ap_ready => grp_tCalc1_fu_171_ap_ready,
        ap_idle => grp_tCalc1_fu_171_ap_idle,
        ap_continue => grp_tCalc1_fu_171_ap_continue);

    grp_tCalc2_fu_178 : component tTest_tCalc2
    port map (
        tCalc1ResultA => tCalc1ResultA_fu_94,
        tCalc1ResultB => tCalc1ResultB_fu_98,
        meanDiff => meanDiff_reg_417,
        t => grp_tCalc2_fu_178_t,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        tCalc1ResultB_ap_vld => ap_const_logic_1,
        tCalc1ResultA_ap_vld => ap_const_logic_1,
        meanDiff_ap_vld => ap_const_logic_1,
        t_ap_vld => grp_tCalc2_fu_178_t_ap_vld,
        ap_start => grp_tCalc2_fu_178_ap_start,
        ap_done => grp_tCalc2_fu_178_ap_done,
        ap_ready => grp_tCalc2_fu_178_ap_ready,
        ap_idle => grp_tCalc2_fu_178_ap_idle,
        ap_continue => grp_tCalc2_fu_178_ap_continue);

    udiv_71ns_40ns_32_75_seq_1_U58 : component tTest_udiv_71ns_40ns_32_75_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 75,
        din0_WIDTH => 71,
        din1_WIDTH => 40,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_212_ap_start,
        done => grp_fu_212_ap_done,
        din0 => grp_fu_212_p0,
        din1 => grp_fu_212_p1,
        ce => grp_fu_212_ce,
        dout => grp_fu_212_p2);

    udiv_71ns_40ns_32_75_seq_1_U59 : component tTest_udiv_71ns_40ns_32_75_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 75,
        din0_WIDTH => 71,
        din1_WIDTH => 40,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_228_ap_start,
        done => grp_fu_228_ap_done,
        din0 => grp_fu_228_p0,
        din1 => grp_fu_228_p1,
        ce => grp_fu_228_ce,
        dout => grp_fu_228_p2);





    C_read_reg_368_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                C_read_reg_368 <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = C_empty_n))) then 
                    C_read_reg_368 <= C_dout;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state88) and (m_axi_gmem_BVALID = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_tCalc1_fu_164_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_tCalc1_fu_164_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state80_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                    ap_sync_reg_grp_tCalc1_fu_164_ap_done <= ap_const_logic_0;
                elsif ((grp_tCalc1_fu_164_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_tCalc1_fu_164_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_tCalc1_fu_164_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_tCalc1_fu_164_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state80_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                    ap_sync_reg_grp_tCalc1_fu_164_ap_ready <= ap_const_logic_0;
                elsif ((grp_tCalc1_fu_164_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_tCalc1_fu_164_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_tCalc1_fu_171_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_tCalc1_fu_171_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state80_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                    ap_sync_reg_grp_tCalc1_fu_171_ap_done <= ap_const_logic_0;
                elsif ((grp_tCalc1_fu_171_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_tCalc1_fu_171_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_tCalc1_fu_171_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_tCalc1_fu_171_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state80_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                    ap_sync_reg_grp_tCalc1_fu_171_ap_ready <= ap_const_logic_0;
                elsif ((grp_tCalc1_fu_171_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_tCalc1_fu_171_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_tCalc2_fu_178_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_tCalc2_fu_178_ap_done <= ap_const_logic_0;
            else
                if ((not(((m_axi_gmem_AWREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state82_on_subcall_done))) and (or_ln82_reg_373 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                    ap_sync_reg_grp_tCalc2_fu_178_ap_done <= ap_const_logic_0;
                elsif ((grp_tCalc2_fu_178_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_tCalc2_fu_178_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_tCalc2_fu_178_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_tCalc2_fu_178_ap_ready <= ap_const_logic_0;
            else
                if ((not(((m_axi_gmem_AWREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state82_on_subcall_done))) and (or_ln82_reg_373 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                    ap_sync_reg_grp_tCalc2_fu_178_ap_ready <= ap_const_logic_0;
                elsif ((grp_tCalc2_fu_178_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_tCalc2_fu_178_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
                    grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_ready = ap_const_logic_1)) then 
                    grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
                    grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_ready = ap_const_logic_1)) then 
                    grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tCalc1_fu_164_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_tCalc1_fu_164_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state79) or ((ap_sync_grp_tCalc1_fu_164_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state80)))) then 
                    grp_tCalc1_fu_164_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tCalc1_fu_164_ap_ready = ap_const_logic_1)) then 
                    grp_tCalc1_fu_164_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tCalc1_fu_171_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_tCalc1_fu_171_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state79) or ((ap_sync_grp_tCalc1_fu_171_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state80)))) then 
                    grp_tCalc1_fu_171_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tCalc1_fu_171_ap_ready = ap_const_logic_1)) then 
                    grp_tCalc1_fu_171_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tCalc2_fu_178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_tCalc2_fu_178_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state81) or ((ap_sync_grp_tCalc2_fu_178_ap_ready = ap_const_logic_0) and (or_ln82_reg_373 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state82)))) then 
                    grp_tCalc2_fu_178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tCalc2_fu_178_ap_ready = ap_const_logic_1)) then 
                    grp_tCalc2_fu_178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    meanA_reg_407_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                meanA_reg_407 <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
                    meanA_reg_407 <= meanA_fu_239_p1;
                end if; 
            end if;
        end if;
    end process;


    meanB_reg_412_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                meanB_reg_412 <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
                    meanB_reg_412 <= meanB_fu_243_p1;
                end if; 
            end if;
        end if;
    end process;


    meanDiff_reg_417_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                meanDiff_reg_417 <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
                    meanDiff_reg_417 <= meanDiff_fu_265_p3;
                end if; 
            end if;
        end if;
    end process;


    or_ln82_reg_373_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                or_ln82_reg_373 <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = C_empty_n))) then 
                    or_ln82_reg_373 <= or_ln82_fu_196_p2;
                end if; 
            end if;
        end if;
    end process;


    tCalc1ResultA_fu_94_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tCalc1ResultA_fu_94 <= ap_const_lv64_0;
            else
                if (((grp_tCalc1_fu_164_out_r_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                    tCalc1ResultA_fu_94 <= grp_tCalc1_fu_164_out_r;
                end if; 
            end if;
        end if;
    end process;


    tCalc1ResultB_fu_98_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tCalc1ResultB_fu_98 <= ap_const_lv64_0;
            else
                if (((grp_tCalc1_fu_171_out_r_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                    tCalc1ResultB_fu_98 <= grp_tCalc1_fu_171_out_r;
                end if; 
            end if;
        end if;
    end process;


    t_fu_90_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                t_fu_90 <= ap_const_lv32_0;
            else
                if (((or_ln82_fu_196_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = C_empty_n))) then 
                    t_fu_90 <= ap_const_lv32_0;
                elsif (((grp_tCalc2_fu_178_t_ap_vld = ap_const_logic_1) and (or_ln82_reg_373 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                    t_fu_90 <= grp_tCalc2_fu_178_t;
                end if; 
            end if;
        end if;
    end process;


    udiv_ln23_1_reg_402_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                udiv_ln23_1_reg_402 <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
                    udiv_ln23_1_reg_402 <= grp_fu_228_p2;
                end if; 
            end if;
        end if;
    end process;


    udiv_ln23_reg_397_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                udiv_ln23_reg_397 <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
                    udiv_ln23_reg_397 <= grp_fu_212_p2;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, C_empty_n, m_axi_gmem_AWREADY, m_axi_gmem_WREADY, m_axi_gmem_BVALID, ap_CS_fsm_state2, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state88, ap_block_state1, or_ln82_fu_196_p2, ap_block_state82_on_subcall_done, ap_CS_fsm_state78, ap_CS_fsm_state80, ap_block_state80_on_subcall_done, ap_block_state78_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((or_ln82_fu_196_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = C_empty_n))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                elsif (((or_ln82_fu_196_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = C_empty_n))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                if (((ap_const_boolean_0 = ap_block_state78_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state78))) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                else
                    ap_NS_fsm <= ap_ST_fsm_state78;
                end if;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                if (((ap_const_boolean_0 = ap_block_state80_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                if ((not(((m_axi_gmem_AWREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state82_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state82))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state83 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state83) and (m_axi_gmem_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state88) and (m_axi_gmem_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state88;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    C_blk_n_assign_proc : process(C_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            C_blk_n <= C_empty_n;
        else 
            C_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    C_read_assign_proc : process(C_empty_n, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = C_empty_n))) then 
            C_read <= ap_const_logic_1;
        else 
            C_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(C_empty_n)
    begin
        if ((ap_const_logic_0 = C_empty_n)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;

    ap_ST_fsm_state78_blk_assign_proc : process(ap_block_state78_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state78_on_subcall_done)) then 
            ap_ST_fsm_state78_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state78_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state80_blk_assign_proc : process(ap_block_state80_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state80_on_subcall_done)) then 
            ap_ST_fsm_state80_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state80_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state81_blk <= ap_const_logic_0;

    ap_ST_fsm_state82_blk_assign_proc : process(m_axi_gmem_AWREADY, ap_block_state82_on_subcall_done)
    begin
        if (((m_axi_gmem_AWREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state82_on_subcall_done))) then 
            ap_ST_fsm_state82_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state82_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state83_blk_assign_proc : process(m_axi_gmem_WREADY)
    begin
        if ((m_axi_gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state83_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state83_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_fsm_state87_blk <= ap_const_logic_0;

    ap_ST_fsm_state88_blk_assign_proc : process(m_axi_gmem_BVALID)
    begin
        if ((m_axi_gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state88_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state88_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state78_on_subcall_done_assign_proc : process(grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_done, grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_done)
    begin
                ap_block_state78_on_subcall_done <= ((grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_done = ap_const_logic_0) or (grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_done = ap_const_logic_0));
    end process;


    ap_block_state80_on_subcall_done_assign_proc : process(ap_sync_grp_tCalc1_fu_164_ap_ready, ap_sync_grp_tCalc1_fu_164_ap_done, ap_sync_grp_tCalc1_fu_171_ap_ready, ap_sync_grp_tCalc1_fu_171_ap_done)
    begin
                ap_block_state80_on_subcall_done <= (((ap_sync_grp_tCalc1_fu_171_ap_ready and ap_sync_grp_tCalc1_fu_171_ap_done) = ap_const_logic_0) or ((ap_sync_grp_tCalc1_fu_164_ap_ready and ap_sync_grp_tCalc1_fu_164_ap_done) = ap_const_logic_0));
    end process;


    ap_block_state82_on_subcall_done_assign_proc : process(or_ln82_reg_373, ap_sync_grp_tCalc2_fu_178_ap_ready, ap_sync_grp_tCalc2_fu_178_ap_done)
    begin
                ap_block_state82_on_subcall_done <= (((ap_sync_grp_tCalc2_fu_178_ap_ready and ap_sync_grp_tCalc2_fu_178_ap_done) = ap_const_logic_0) and (or_ln82_reg_373 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, m_axi_gmem_BVALID, ap_CS_fsm_state88)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state88) and (m_axi_gmem_BVALID = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state88)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state88) and (m_axi_gmem_BVALID = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_tCalc1_fu_164_ap_done <= (grp_tCalc1_fu_164_ap_done or ap_sync_reg_grp_tCalc1_fu_164_ap_done);
    ap_sync_grp_tCalc1_fu_164_ap_ready <= (grp_tCalc1_fu_164_ap_ready or ap_sync_reg_grp_tCalc1_fu_164_ap_ready);
    ap_sync_grp_tCalc1_fu_171_ap_done <= (grp_tCalc1_fu_171_ap_done or ap_sync_reg_grp_tCalc1_fu_171_ap_done);
    ap_sync_grp_tCalc1_fu_171_ap_ready <= (grp_tCalc1_fu_171_ap_ready or ap_sync_reg_grp_tCalc1_fu_171_ap_ready);
    ap_sync_grp_tCalc2_fu_178_ap_done <= (grp_tCalc2_fu_178_ap_done or ap_sync_reg_grp_tCalc2_fu_178_ap_done);
    ap_sync_grp_tCalc2_fu_178_ap_ready <= (grp_tCalc2_fu_178_ap_ready or ap_sync_reg_grp_tCalc2_fu_178_ap_ready);
    famA_address0 <= grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_famA_address0;
    famA_ce0 <= grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_famA_ce0;
    famB_address0 <= grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_famB_address0;
    famB_ce0 <= grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_famB_ce0;

    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_state83)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_start <= grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_11_fu_156_ap_start_reg;
    grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_start <= grp_Block_entry2347_proc6_Pipeline_VITIS_LOOP_35_1_fu_148_ap_start_reg;

    grp_fu_212_ap_start_assign_proc : process(C_empty_n, ap_CS_fsm_state2, or_ln82_fu_196_p2)
    begin
        if (((or_ln82_fu_196_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = C_empty_n))) then 
            grp_fu_212_ap_start <= ap_const_logic_1;
        else 
            grp_fu_212_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_212_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state88, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_212_ce <= ap_const_logic_0;
        else 
            grp_fu_212_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_212_p0 <= (p_read2 & ap_const_lv24_0);
    grp_fu_212_p1 <= grp_fu_212_p10(40 - 1 downto 0);
    grp_fu_212_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read),71));

    grp_fu_228_ap_start_assign_proc : process(C_empty_n, ap_CS_fsm_state2, or_ln82_fu_196_p2)
    begin
        if (((or_ln82_fu_196_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = C_empty_n))) then 
            grp_fu_228_ap_start <= ap_const_logic_1;
        else 
            grp_fu_228_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_228_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state88, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_228_ce <= ap_const_logic_0;
        else 
            grp_fu_228_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_228_p0 <= (p_read3 & ap_const_lv24_0);
    grp_fu_228_p1 <= grp_fu_228_p10(40 - 1 downto 0);
    grp_fu_228_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1),71));

    grp_tCalc1_fu_164_ap_continue_assign_proc : process(ap_CS_fsm_state80, ap_block_state80_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state80_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            grp_tCalc1_fu_164_ap_continue <= ap_const_logic_1;
        else 
            grp_tCalc1_fu_164_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_tCalc1_fu_164_ap_start <= grp_tCalc1_fu_164_ap_start_reg;

    grp_tCalc1_fu_171_ap_continue_assign_proc : process(ap_CS_fsm_state80, ap_block_state80_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state80_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            grp_tCalc1_fu_171_ap_continue <= ap_const_logic_1;
        else 
            grp_tCalc1_fu_171_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_tCalc1_fu_171_ap_start <= grp_tCalc1_fu_171_ap_start_reg;

    grp_tCalc2_fu_178_ap_continue_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state82, or_ln82_reg_373, ap_block_state82_on_subcall_done)
    begin
        if ((not(((m_axi_gmem_AWREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state82_on_subcall_done))) and (or_ln82_reg_373 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
            grp_tCalc2_fu_178_ap_continue <= ap_const_logic_1;
        else 
            grp_tCalc2_fu_178_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_tCalc2_fu_178_ap_start <= grp_tCalc2_fu_178_ap_start_reg;
    icmp_ln27_fu_247_p2 <= "1" when (unsigned(meanA_fu_239_p1) > unsigned(meanB_fu_243_p1)) else "0";
    icmp_ln82_1_fu_191_p2 <= "1" when (p_read1 = ap_const_lv40_0) else "0";
    icmp_ln82_fu_186_p2 <= "1" when (p_read = ap_const_lv40_0) else "0";
    m_axi_gmem_ARADDR <= ap_const_lv32_0;
    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_0;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_ARVALID <= ap_const_logic_0;
    m_axi_gmem_AWADDR <= sext_ln94_fu_298_p1;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_1;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_AWVALID_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state82, ap_block_state82_on_subcall_done)
    begin
        if ((not(((m_axi_gmem_AWREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state82_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state88)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state88) and (m_axi_gmem_BVALID = ap_const_logic_1))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_RREADY <= ap_const_logic_0;
    m_axi_gmem_WDATA <= t_fu_90;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_F;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_state83)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state83) and (m_axi_gmem_WREADY = ap_const_logic_1))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    meanA_fu_239_p1 <= udiv_ln23_reg_397(32 - 1 downto 0);
    meanB_fu_243_p1 <= udiv_ln23_1_reg_402(32 - 1 downto 0);
    meanDiff_fu_265_p3 <= 
        sub_ln27_fu_253_p2 when (icmp_ln27_fu_247_p2(0) = '1') else 
        sub_ln27_1_fu_259_p2;
    or_ln82_fu_196_p2 <= (icmp_ln82_fu_186_p2 or icmp_ln82_1_fu_191_p2);
        sext_ln94_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_289_p4),32));

    sub_ln27_1_fu_259_p2 <= std_logic_vector(unsigned(meanB_fu_243_p1) - unsigned(meanA_fu_239_p1));
    sub_ln27_fu_253_p2 <= std_logic_vector(unsigned(meanA_fu_239_p1) - unsigned(meanB_fu_243_p1));
    trunc_ln2_fu_289_p4 <= C_read_reg_368(31 downto 2);
end behav;
